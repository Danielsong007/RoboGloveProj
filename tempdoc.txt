import serial
import time

class DaYangSensor:
    def __init__(self,port_name,zero):
        self.ser = serial.Serial(port=port_name, baudrate=19200, bytesize=8, parity=serial.PARITY_NONE, stopbits=1, timeout=1)
        if zero==1:
            self.ser.write(bytes([0x01, 0x10, 0x06, 0x2A, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x01, 0x9B, 0xA8])) # Zero

    def read_angles(self): # 读取传感器角度数据
        self.ser.flushInput()  # 清空串口接收缓冲区
        self.ser.write(bytes([0x01, 0x03, 0x9C, 0x40, 0x00, 0x02, 0xEB, 0x8F]))
        response = self.ser.read(9)  # 读取传感器应答命令
        # print(f"Response in HEX: {response.hex().upper()}")
        force_data = int.from_bytes(response[3:7], byteorder='big')
        if force_data>10000:
            return 0
        else:
            return force_data

    def close(self): # 关闭串口连接
        self.ser.close()

# 使用示例
if __name__ == "__main__":
    sensor = DaYangSensor('/dev/ttyUSB1',1)
    try:
        while True:
            force=sensor.read_angles()
            print(force)
            time.sleep(0.01)  # 等待 100ms，确保命令已发送
    except KeyboardInterrupt:
        print("KeyboardExit")
    finally:
        sensor.close()


import serial
import heapq  # 用于获取最大的10个数

class LiganSensor:
    def __init__(self, port='COM3'): # Windows为COMx，Linux为/dev/ttyUSBx
        self.port = port
        self.ser = serial.Serial(port=self.port, baudrate=460800, bytesize=serial.EIGHTBITS,
            parity=serial.PARITY_NONE, stopbits=serial.STOPBITS_ONE, timeout=1)
        self.Pdata=[0] * 36
    
    def close(self):
        self.ser.close()
    
    def print_data(self):
        for row in range(6):
            start_idx = row * 6
            end_idx = start_idx + 6
            row_data = self.Pdata[start_idx:end_idx]
            print(f"传感器 {start_idx+1:2d}-{end_idx:2d}: {[f'{x:5d}' for x in row_data]}")
    
    def read_data(self):
        while self.ser.read() != b'\xFF':
            pass
        remaining_data = self.ser.read(77)
        frame_data = b'\xFF' + remaining_data
        pressure_values = []
        for i in range(36):
            idx = 4 + i * 2 # 每个数据点占2字节，从第4字节开始
            if idx + 1 < len(frame_data):
                value = (frame_data[idx] << 8) | frame_data[idx + 1]
                pressure_values.append(value)
        calculated_checksum = sum(frame_data[2:76]) & 0xFFFF
        frame_checksum = (frame_data[76] << 8) | frame_data[77]
        checksum_valid = (calculated_checksum == frame_checksum)
        if checksum_valid and len(remaining_data) == 77 and frame_data[1] == 0x66:
            self.Pdata=pressure_values
        else:
            print('Data is not right.')
        top10Sum=sum(heapq.nlargest(10, self.Pdata))
        return [self.Pdata,top10Sum]

# 使用示例
if __name__ == "__main__":
    liganS = LiganSensor(port='/dev/ttyUSB3')  # 根据实际串口修改
    try:
        while True:
            data=liganS.read_data()
            print(data[1])
            # liganS.print_data()
    except KeyboardInterrupt:
        print("\n用户中断")
    finally:
        liganS.close()


import sys
import time
from xyz_demo.xyz_utils import xyz_utils
from sensors.dayang import DaYangSensor
from sensors.ligan import LiganSensor
import numpy as np
from collections import deque

def main():
    try:
        Srope = DaYangSensor('/dev/ttyUSB0',0)
        Sligan=LiganSensor(port='/dev/ttyUSB3')
        myXYZ = xyz_utils()
        myXYZ.OpenEnableZero_ALL()
        InitPos=myXYZ.Safe_Jog()

        while True:
            time.sleep(0.01)
            Rope_S=Srope.read_angles()
            print('Rope_S:',Rope_S)
            Touch_S=Sligan.read_data()[1]
            print('Touch_S:',Touch_S)

    except KeyboardInterrupt:
        print("Ctrl-C is pressed!")
        
    finally:
        myXYZ.SafeQuit()
        Srope.close()
        Sligan.close()
        sys.exit(0)

if __name__ == "__main__":
    main()


        


